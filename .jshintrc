{
    "predef"  : ["include", "module"],

     // This option prohibits the use of bitwise operators such as ^ (XOR), | (OR) andothers.
    "bitwise" : true,

     // This option allows you to force all variable names to use either camelCase style or UPPER_CASE withunderscores
    "camelcase" : false,

     // This option requires you to always put curly braces around blocks in loops andconditionals.
    "curly" : true,

     // This options prohibits the use of == and != in favor of === and!==.
    "eqeqeq" : true,

     // This option requires all for in loops to filter object'sitems.
    "forin" : true,

     // This option prohibits the use of immediate function invocations without wrapping them inparentheses.
    "immed" : true,

     // This option enforces specific tab width for yourcode.
    "indent" : 4,

     // This option prohibits the use of a variable before it was defined.
    "latedef" : false,

     // This option requires you to capitalize names of constructorfunctions.
    "newcap" : true,

     // This option prohibits the use of arguments.caller and arguments.callee.
    "noarg" : true,

     // This option warns when you have an empty block in yourcode.
    "noempty" : true,

     // This option prohibits the use of constructor functions for side-effects.
    "nonew" : false,

     // This option prohibits the use of unary increment and decrementoperators.
    "plusplus" : false,

     // This option enforces the consistency of quotation marks used throughout yourcode.
    "quotmark" : true,

     // This option prohibits the use of unsafe . in regularexpressions.
    "regexp" : false,

     // This option prohibits the use of explicitly undeclaredvariables.
    "undef" : true,

     // This option warns when you define and never use yourvariables.
    "unused" : true,

     // This option requires all functions to run in EcmaScript 5's strictmode.
    "strict" : false,

     // This option makes it an error to leave a trailing whitespace in yourcode.
    "trailing" : true,

     // This option lets you set the max number of formal parameters allowed perfunction.
     //"maxparams" : 5,

     // This option lets you control how nested do you want your blocks tobe.
     "maxdepth" : 5,

     // This option lets you set the max number of statements allowed per function.
    "maxstatements" : false,

     // This option lets you control cyclomatic complexity throughout yourcode.
    "maxcomplexity" : false,

     // This option suppresses warnings about missing semicolons.
    "asi" : false,

     // This option suppresses warnings about the use of assignments in cases where comparisons areexpected.
    "boss" : false,

     // This option suppresses warnings about the debugger statements in yourcode.
    "debug" : false,

     // This option suppresses warnings about == null comparisons.
    "eqnull" : false,

     // This option tells JSHint that your code uses ECMAScript 5 specific features such as getters andsetters.
    "es5" : false,

     // This option tells JSHint that your code uses ES.next specific features such asconst.
    "esnext" : false,

     // This option suppresses warnings about the use of eval.
    "evil" : true,

     // This option suppresses warnings about the use of expressions
     // where normally you would expect to see assignments or function calls.
    "expr" : true,

     // This option suppresses warnings about declaring variables inside of control structures
     // while accessing them later from theoutside.
    "funcscope" : false,

     // This option suppresses warnings about the use of global strictmode.
    "globalstrict" : false,

     // This option suppresses warnings about the __iterator__ property.
    "iterator" : false,

     // This option suppresses warnings about missing semicolons,
     // but only when the semicolon is omitted for the last statement in a one-line block.
    "lastsemic" : false,

     // This option suppresses most of the warnings about possibly unsafe line breakings in yourcode.
    "laxbreak" : false,

     // This option suppresses warnings about comma-first codingstyle
    "laxcomma" : false,

     // This option suppresses warnings about functions inside ofloops.
    "loopfunc" : false,

     // This option suppresses warnings about multi-linestrings.
    "multistr" : false,

     // This option suppresses warnings about switches with just onecase.
    "onecase" : false,

     // This option suppresses warnings about the __proto__ property.
    "proto" : false,

     // This option suppresses warnings about unescaped - in the end of regularexpressions.
    "regexdash" : false,

     // This option suppresses warnings about the use of script-targeted URLsâ€”such asjavascript:....
    "scripturl" : false,

     // This option suppresses warnings about mixed tabs and spaces when the latter are used for alignmnentonly.
    "smarttabs" : false,

     // This option suppresses warnings about variable shadowing
     // i.e. declaring a variable that had been already declared somewhere in the outerscope.
    "shadow" : false,

     // This option suppresses warnings about using [] notation
     // when it can be expressed in dot notation: person['name'] vs.person.name.
    "sub" : false,

     // This option suppresses warnings about "weird" constructions like new function () { ... } and newObject.
    "supernew" : false,

     // This option suppresses warnings about possible strictviolations
     // when the code is running in strict mode and you use this in a non-constructorfunction.
    "validthis" : false,

     // This option defines globals exposed by modern browsers: all the way from good ol' document and navigator to the HTML5 FileReader and other new developments in the browserworld.
    "browser" : true,

     // This option defines globals exposed byCouchDB.
    "couch" : false,

     // This option defines globals that are usually used for logging poor-man's debugging: console, alert,etc.
    "devel" : true,

     // This option defines globals exposed by the DojoToolkit.
    "dojo" : false,

     // This option defines globals exposed by the jQuery JavaScriptlibrary.
    "jquery" : false,

     // This option defines globals exposed by the MooTools JavaScriptframework.
    "mootools" : false,

     // This option defines globals available when your code is running inside of the Node runtimeenvironment.
    "node" : true,

     // This option defines non-standard but widely adopted globals such as escape andunescape.
    "nonstandard" : false,

     // This option defines globals exposed by the Prototype JavaScriptframework.
    "prototypejs" : false,

     // This option defines globals available when your code is running inside of the Rhino runtimeenvironment.
    "rhino" : false,

     // This option defines globals available when your code is running inside of a WebWorker.
    "worker" : false,

     // This option defines globals available when your code is running as a script for the Windows ScriptHost.
    "wsh" : false
}
